Description:
  This template deploys a private S3 bucket and CloudFront Distribution with 
  Origin Access Control (OAC) for secure access management using AWS CloudFormation.
Parameters:
  S3BucketName:
    Type: String
    Default: "my-s3-bucket"
  ErrorPagePath:
    Type: String
    Default: "/index.html"
    Description: Path to the error page for 4xx and 5xx errors
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketName
      AccessControl: Private
      WebsiteConfiguration:
        IndexDocument: index.html
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  CloudFrontOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub "${S3BucketName}-OAC"
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn: [S3Bucket, CloudFrontOriginAccessControl]
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt S3Bucket.RegionalDomainName
            Id: s3-origin
            S3OriginConfig:
              OriginAccessIdentity: ""
            OriginAccessControlId: !GetAtt CloudFrontOriginAccessControl.Id
        Enabled: true
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          TargetOriginId: s3-origin
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
        CustomErrorResponses:
          - ErrorCode: 400
            ResponseCode: 400
            ResponsePagePath: !Ref ErrorPagePath
            ErrorCachingMinTTL: 300
          - ErrorCode: 403
            ResponseCode: 403
            ResponsePagePath: !Ref ErrorPagePath
            ErrorCachingMinTTL: 300
          - ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: !Ref ErrorPagePath
            ErrorCachingMinTTL: 300
          - ErrorCode: 405
            ResponseCode: 405
            ResponsePagePath: !Ref ErrorPagePath
            ErrorCachingMinTTL: 300
          - ErrorCode: 414
            ResponseCode: 414
            ResponsePagePath: !Ref ErrorPagePath
            ErrorCachingMinTTL: 300
          - ErrorCode: 416
            ResponseCode: 416
            ResponsePagePath: !Ref ErrorPagePath
            ErrorCachingMinTTL: 300
          - ErrorCode: 500
            ResponseCode: 500
            ResponsePagePath: !Ref ErrorPagePath
            ErrorCachingMinTTL: 300
          - ErrorCode: 501
            ResponseCode: 501
            ResponsePagePath: !Ref ErrorPagePath
            ErrorCachingMinTTL: 300
          - ErrorCode: 502
            ResponseCode: 502
            ResponsePagePath: !Ref ErrorPagePath
            ErrorCachingMinTTL: 300
          - ErrorCode: 503
            ResponseCode: 503
            ResponsePagePath: !Ref ErrorPagePath
            ErrorCachingMinTTL: 300
          - ErrorCode: 504
            ResponseCode: 504
            ResponsePagePath: !Ref ErrorPagePath
            ErrorCachingMinTTL: 300
        PriceClass: PriceClass_100
        HttpVersion: http2
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: CloudFrontDistribution
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          - Sid: AllowCloudFrontServicePrincipal
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub "${S3Bucket.Arn}/*"
            Condition:
              StringEquals:
                "AWS:SourceArn": !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}"
